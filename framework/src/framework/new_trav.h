
/**
 * @file eval.h
 *
 * Functions needed for compilation
 * 
 * THIS FILE HAS BEEN GENERATED USING 
 * $Id: free_node.h.xsl 14593 2006-01-31 17:09:55Z cg $.
 * DO NOT EDIT THIS FILE AS MIGHT BE CHANGED IN A LATER VERSION.
 *
 * ALL CHANGES MADE TO THIS FILE WILL BE OVERWRITTEN!
 *
 */

#ifndef _SAC_EVAL_H_
#define _SAC_EVAL_H_

#include "types.h"

extern node *EVALassign (node * arg_node, info * arg_info);
extern node *EVALbinop (node * arg_node, info * arg_info);
extern node *EVALbool (node * arg_node, info * arg_info);
extern node *EVALcast (node * arg_node, info * arg_info);
extern node *EVALconst (node * arg_node, info * arg_info);
extern node *EVALdo (node * arg_node, info * arg_info);
extern node *EVALdowhilestat (node * arg_node, info * arg_info);
extern node *EVALelse (node * arg_node, info * arg_info);
extern node *EVALelseblock (node * arg_node, info * arg_info);
extern node *EVALenclosedblock (node * arg_node, info * arg_info);
extern node *EVALenclosedexpr (node * arg_node, info * arg_info);
extern node *EVALequals (node * arg_node, info * arg_info);
extern node *EVALerror (node * arg_node, info * arg_info);
extern node *EVALexport (node * arg_node, info * arg_info);
extern node *EVALexprlist (node * arg_node, info * arg_info);
extern node *EVALextern (node * arg_node, info * arg_info);
extern node *EVALfloat (node * arg_node, info * arg_info);
extern node *EVALfor (node * arg_node, info * arg_info);
extern node *EVALfordec (node * arg_node, info * arg_info);
extern node *EVALforstat (node * arg_node, info * arg_info);
extern node *EVALforvarinit (node * arg_node, info * arg_info);
extern node *EVALfunbody (node * arg_node, info * arg_info);
extern node *EVALfuncall (node * arg_node, info * arg_info);
extern node *EVALfundec (node * arg_node, info * arg_info);
extern node *EVALfundef (node * arg_node, info * arg_info);
extern node *EVALfunheader (node * arg_node, info * arg_info);
extern node *EVALglobaldec (node * arg_node, info * arg_info);
extern node *EVALglobaldef (node * arg_node, info * arg_info);
extern node *EVALifkeyword (node * arg_node, info * arg_info);
extern node *EVALifstat (node * arg_node, info * arg_info);
extern node *EVALkey_bool (node * arg_node, info * arg_info);
extern node *EVALkey_float (node * arg_node, info * arg_info);
extern node *EVALkey_int (node * arg_node, info * arg_info);
extern node *EVALkey_void (node * arg_node, info * arg_info);
extern node *EVALl_bracket (node * arg_node, info * arg_info);
extern node *EVALl_fl_bracket (node * arg_node, info * arg_info);
extern node *EVALmonop (node * arg_node, info * arg_info);
extern node *EVALnum (node * arg_node, info * arg_info);
extern node *EVALparam (node * arg_node, info * arg_info);
extern node *EVALparamlist (node * arg_node, info * arg_info);
extern node *EVALprogram (node * arg_node, info * arg_info);
extern node *EVALr_bracket (node * arg_node, info * arg_info);
extern node *EVALr_fl_bracket (node * arg_node, info * arg_info);
extern node *EVALrettype (node * arg_node, info * arg_info);
extern node *EVALreturn (node * arg_node, info * arg_info);
extern node *EVALreturnkeyword (node * arg_node, info * arg_info);
extern node *EVALstatement (node * arg_node, info * arg_info);
extern node *EVALstatementlist (node * arg_node, info * arg_info);
extern node *EVALtype (node * arg_node, info * arg_info);
extern node *EVALvar (node * arg_node, info * arg_info);
extern node *EVALvardec (node * arg_node, info * arg_info);
extern node *EVALvardeclist (node * arg_node, info * arg_info);
extern node *EVALvarlet (node * arg_node, info * arg_info);
extern node *EVALwhile (node * arg_node, info * arg_info);
extern node *EVALwhilestat (node * arg_node, info * arg_info);

#endif /* _SAC_EVAL_H_ */
