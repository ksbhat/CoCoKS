
/**
 * @file free_node.h
 *
 * Functions to free node structures
 * 
 * THIS FILE HAS BEEN GENERATED USING 
 * $Id: free_node.h.xsl 14593 2006-01-31 17:09:55Z cg $.
 * DO NOT EDIT THIS FILE AS MIGHT BE CHANGED IN A LATER VERSION.
 *
 * ALL CHANGES MADE TO THIS FILE WILL BE OVERWRITTEN!
 *
 */

#ifndef _SAC_FREE_NODE_H_
#define _SAC_FREE_NODE_H_

#include "types.h"

extern node *FREEassign (node * arg_node, info * arg_info);
extern node *FREEbinop (node * arg_node, info * arg_info);
extern node *FREEbool (node * arg_node, info * arg_info);
extern node *FREEcast (node * arg_node, info * arg_info);
extern node *FREEconst (node * arg_node, info * arg_info);
extern node *FREEdo (node * arg_node, info * arg_info);
extern node *FREEdowhilestat (node * arg_node, info * arg_info);
extern node *FREEelse (node * arg_node, info * arg_info);
extern node *FREEelseblock (node * arg_node, info * arg_info);
extern node *FREEenclosedblock (node * arg_node, info * arg_info);
extern node *FREEenclosedexpr (node * arg_node, info * arg_info);
extern node *FREEequals (node * arg_node, info * arg_info);
extern node *FREEerror (node * arg_node, info * arg_info);
extern node *FREEexport (node * arg_node, info * arg_info);
extern node *FREEexprlist (node * arg_node, info * arg_info);
extern node *FREEextern (node * arg_node, info * arg_info);
extern node *FREEfloat (node * arg_node, info * arg_info);
extern node *FREEfor (node * arg_node, info * arg_info);
extern node *FREEfordec (node * arg_node, info * arg_info);
extern node *FREEforstat (node * arg_node, info * arg_info);
extern node *FREEforvarinit (node * arg_node, info * arg_info);
extern node *FREEfunbody (node * arg_node, info * arg_info);
extern node *FREEfuncall (node * arg_node, info * arg_info);
extern node *FREEfundec (node * arg_node, info * arg_info);
extern node *FREEfundef (node * arg_node, info * arg_info);
extern node *FREEfunheader (node * arg_node, info * arg_info);
extern node *FREEglobaldec (node * arg_node, info * arg_info);
extern node *FREEglobaldef (node * arg_node, info * arg_info);
extern node *FREEifkeyword (node * arg_node, info * arg_info);
extern node *FREEifstat (node * arg_node, info * arg_info);
extern node *FREEkey_bool (node * arg_node, info * arg_info);
extern node *FREEkey_float (node * arg_node, info * arg_info);
extern node *FREEkey_int (node * arg_node, info * arg_info);
extern node *FREEkey_void (node * arg_node, info * arg_info);
extern node *FREEl_bracket (node * arg_node, info * arg_info);
extern node *FREEl_fl_bracket (node * arg_node, info * arg_info);
extern node *FREEmonop (node * arg_node, info * arg_info);
extern node *FREEnum (node * arg_node, info * arg_info);
extern node *FREEparam (node * arg_node, info * arg_info);
extern node *FREEparamlist (node * arg_node, info * arg_info);
extern node *FREEprogram (node * arg_node, info * arg_info);
extern node *FREEr_bracket (node * arg_node, info * arg_info);
extern node *FREEr_fl_bracket (node * arg_node, info * arg_info);
extern node *FREErettype (node * arg_node, info * arg_info);
extern node *FREEreturn (node * arg_node, info * arg_info);
extern node *FREEreturnkeyword (node * arg_node, info * arg_info);
extern node *FREEstatement (node * arg_node, info * arg_info);
extern node *FREEstatementlist (node * arg_node, info * arg_info);
extern node *FREEtype (node * arg_node, info * arg_info);
extern node *FREEvar (node * arg_node, info * arg_info);
extern node *FREEvardec (node * arg_node, info * arg_info);
extern node *FREEvardeclist (node * arg_node, info * arg_info);
extern node *FREEvarlet (node * arg_node, info * arg_info);
extern node *FREEwhile (node * arg_node, info * arg_info);
extern node *FREEwhilestat (node * arg_node, info * arg_info);

#endif /* _SAC_FREE_NODE_H_ */
