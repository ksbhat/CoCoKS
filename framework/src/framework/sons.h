
/**
 * @file sons.h
 *
 * Defines the NodesUnion and node structures.
 * 
 * THIS FILE HAS BEEN GENERATED USING 
 * $Id: sons.h.xsl 14593 2006-01-31 17:09:55Z cg $.
 * DO NOT EDIT THIS FILE AS MIGHT BE CHANGED IN A LATER VERSION.
 *
 * ALL CHANGES MADE TO THIS FILE WILL BE OVERWRITTEN!
 *
 */

#ifndef _SAC_SONS_H_
#define _SAC_SONS_H_

#include "types.h"


/******************************************************************************
 * For each node a structure of its sons is defined, named 
 * SONS_<nodename>
 *****************************************************************************/
struct SONS_N_ASSIGN
{
  node *Let;
  node *Expr;
};
struct SONS_N_BINOP
{
  node *Left;
  node *Right;
};
struct SONS_N_BOOL
{
};
struct SONS_N_CAST
{
  node *L_Bracket;
  node *Type;
  node *R_Bracket;
  node *Expr;
};
struct SONS_N_CONST
{
  node *Set_Const;
};
struct SONS_N_DO
{
};
struct SONS_N_DOWHILESTAT
{
  node *Do;
  node *Block;
  node *While;
  node *Expr;
};
struct SONS_N_ELSE
{
};
struct SONS_N_ELSEBLOCK
{
  node *Else;
  node *Block;
};
struct SONS_N_ENCLOSEDBLOCK
{
  node *L_FL_Bracket;
  node *StatementList;
  node *R_FL_Bracket;
};
struct SONS_N_ENCLOSEDEXPR
{
  node *L_Bracket;
  node *Expr;
  node *R_Bracket;
};
struct SONS_N_EQUALS
{
};
struct SONS_N_ERROR
{
  node *Next;
};
struct SONS_N_EXPORT
{
};
struct SONS_N_EXPRLIST
{
  node *Expr;
  node *Next;
};
struct SONS_N_EXTERN
{
};
struct SONS_N_FLOAT
{
};
struct SONS_N_FOR
{
};
struct SONS_N_FORDEC
{
  node *Type;
  node *ForVarInit;
  node *Expr;
};
struct SONS_N_FORSTAT
{
  node *For;
  node *ForDec;
  node *Block;
};
struct SONS_N_FORVARINIT
{
  node *VarLet;
  node *Equals;
  node *Expr;
};
struct SONS_N_FUNBODY
{
};
struct SONS_N_FUNCALL
{
  node *Var;
  node *ExprList;
};
struct SONS_N_FUNDEC
{
  node *Extern;
  node *FunHeader;
};
struct SONS_N_FUNDEF
{
  node *Export;
  node *FunHeader;
  node *FunBody;
};
struct SONS_N_FUNHEADER
{
  node *RetType;
  node *Var;
  node *ParamList;
};
struct SONS_N_GLOBALDEC
{
  node *Extern;
  node *Type;
  node *Var;
};
struct SONS_N_GLOBALDEF
{
  node *Export;
  node *Type;
  node *Var;
  node *Expr;
};
struct SONS_N_IFKEYWORD
{
};
struct SONS_N_IFSTAT
{
  node *If;
  node *L_Bracket;
  node *Expr;
  node *R_Bracket;
  node *Block;
  node *ElseBlock;
};
struct SONS_N_KEY_BOOL
{
};
struct SONS_N_KEY_FLOAT
{
};
struct SONS_N_KEY_INT
{
};
struct SONS_N_KEY_VOID
{
};
struct SONS_N_L_BRACKET
{
};
struct SONS_N_L_FL_BRACKET
{
};
struct SONS_N_MONOP
{
  node *Right;
};
struct SONS_N_NUM
{
};
struct SONS_N_PARAM
{
  node *Type;
  node *Var;
};
struct SONS_N_PARAMLIST
{
  node *Param;
  node *Next;
};
struct SONS_N_PROGRAM
{
  node *CodeBlock;
  node *Next;
};
struct SONS_N_R_BRACKET
{
};
struct SONS_N_R_FL_BRACKET
{
};
struct SONS_N_RETTYPE
{
  node *Set_RetType;
};
struct SONS_N_RETURN
{
  node *ReturnKeyword;
  node *Expr;
};
struct SONS_N_RETURNKEYWORD
{
};
struct SONS_N_STATEMENT
{
  node *Set_Statement;
};
struct SONS_N_STATEMENTLIST
{
  node *Statement;
  node *Next;
};
struct SONS_N_TYPE
{
  node *Set_Type;
};
struct SONS_N_VAR
{
};
struct SONS_N_VARDEC
{
  node *Type;
  node *Var;
  node *Expr;
};
struct SONS_N_VARDECLIST
{
  node *VarDec;
  node *Next;
};
struct SONS_N_VARLET
{
};
struct SONS_N_WHILE
{
};
struct SONS_N_WHILESTAT
{
  node *While;
  node *Expr;
  node *Block;
};
/*****************************************************************************
 * This union handles all different types of sons. Its members are
 * called N_nodename.
 ****************************************************************************/
struct SONUNION
{
  struct SONS_N_ASSIGN *N_assign;
  struct SONS_N_BINOP *N_binop;
  struct SONS_N_BOOL *N_bool;
  struct SONS_N_CAST *N_cast;
  struct SONS_N_CONST *N_const;
  struct SONS_N_DO *N_do;
  struct SONS_N_DOWHILESTAT *N_dowhilestat;
  struct SONS_N_ELSE *N_else;
  struct SONS_N_ELSEBLOCK *N_elseblock;
  struct SONS_N_ENCLOSEDBLOCK *N_enclosedblock;
  struct SONS_N_ENCLOSEDEXPR *N_enclosedexpr;
  struct SONS_N_EQUALS *N_equals;
  struct SONS_N_ERROR *N_error;
  struct SONS_N_EXPORT *N_export;
  struct SONS_N_EXPRLIST *N_exprlist;
  struct SONS_N_EXTERN *N_extern;
  struct SONS_N_FLOAT *N_float;
  struct SONS_N_FOR *N_for;
  struct SONS_N_FORDEC *N_fordec;
  struct SONS_N_FORSTAT *N_forstat;
  struct SONS_N_FORVARINIT *N_forvarinit;
  struct SONS_N_FUNBODY *N_funbody;
  struct SONS_N_FUNCALL *N_funcall;
  struct SONS_N_FUNDEC *N_fundec;
  struct SONS_N_FUNDEF *N_fundef;
  struct SONS_N_FUNHEADER *N_funheader;
  struct SONS_N_GLOBALDEC *N_globaldec;
  struct SONS_N_GLOBALDEF *N_globaldef;
  struct SONS_N_IFKEYWORD *N_ifkeyword;
  struct SONS_N_IFSTAT *N_ifstat;
  struct SONS_N_KEY_BOOL *N_key_bool;
  struct SONS_N_KEY_FLOAT *N_key_float;
  struct SONS_N_KEY_INT *N_key_int;
  struct SONS_N_KEY_VOID *N_key_void;
  struct SONS_N_L_BRACKET *N_l_bracket;
  struct SONS_N_L_FL_BRACKET *N_l_fl_bracket;
  struct SONS_N_MONOP *N_monop;
  struct SONS_N_NUM *N_num;
  struct SONS_N_PARAM *N_param;
  struct SONS_N_PARAMLIST *N_paramlist;
  struct SONS_N_PROGRAM *N_program;
  struct SONS_N_R_BRACKET *N_r_bracket;
  struct SONS_N_R_FL_BRACKET *N_r_fl_bracket;
  struct SONS_N_RETTYPE *N_rettype;
  struct SONS_N_RETURN *N_return;
  struct SONS_N_RETURNKEYWORD *N_returnkeyword;
  struct SONS_N_STATEMENT *N_statement;
  struct SONS_N_STATEMENTLIST *N_statementlist;
  struct SONS_N_TYPE *N_type;
  struct SONS_N_VAR *N_var;
  struct SONS_N_VARDEC *N_vardec;
  struct SONS_N_VARDECLIST *N_vardeclist;
  struct SONS_N_VARLET *N_varlet;
  struct SONS_N_WHILE *N_while;
  struct SONS_N_WHILESTAT *N_whilestat;
};
#endif /* _SAC_SONS_H_ */
